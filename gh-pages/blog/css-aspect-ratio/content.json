{"is404":false,"staticData":{"158010175":"{\"parsedFrontmatter\":{\"slug\":\"css-aspect-ratio\",\"title\":\"Using Aspect Ratio in CSS\",\"tags\":[\"web\"],\"publishDate\":\"2018-09-12\",\"description\":\"The aspect ratio of an element describes the proportional relationship between its width and its height.\"},\"withoutFrontmatter\":\"\\nThe aspect ratio of an element describes the proportional relationship between its width and its height.\\nDepending on the device you are using to access a responsive web page the content may be a different size. The same content will most likely need to keep its\\naspect ratio whatever the device so that the content makes sense and looks good. It is all about looking good.\\n\\nIn front end web development there are different ways to determine the aspect ratio of an element. These include defining height/width in ems and defining the  \\nfont-size of a given element and using viewport width, vw to style responsively.\\n\\nThere are many mixins for sass, which make light work of aspect ratios.\\nThis post is to briefly explain a way to achieve a scalable image using the :before pseudo class and parent and its child element.\\n\\nLet's use two separate div elements, one called _.image_, and inside of that another, _.image\\\\_\\\\_content_.\\n\\nThe goal here is to position .image 'relatively' so that it will take on a parental role.\\nWe want our _.image\\\\_\\\\_content_ to completely fill _.image_, which can be done by telling _.image\\\\_\\\\_content_ to have a ‘position: absolute’ and telling it to begin at each side of the _.image_ div.\\nNext we will add a background-image too.\\nWe will make our _.image:before_ class have ‘width: 100%’ and instruct it that it has content. Both our _.image\\\\_\\\\_content_ and _:before_ class need to be ‘block’ elements.\\nBy adding padding-top to the _.image:before_, we determine the height of _.image\\\\_\\\\_content_ and its background-image.\\n\\nAll that is left to do is to set the width of _.image_ now that _.image\\\\_\\\\_content_ fills it and is set to the correct aspect-ratio.\\nSee below for a working example &darr. :point_down:\\n\\n**HTML**\\n\\n```html\\n<div class=\\\"image\\\">\\n  <div class=\\\"image__content\\\"></div>\\n</div>\\n```\\n\\n**CSS**\\n\\n```css\\n.image {\\n  position: relative;\\n  width: 40%;\\n}\\n\\n.image:before {\\n  display: block;\\n  width: 100%;\\n  content: '';\\n  padding-top: 77%;\\n  /*padding-top = height/width x 100  */\\n}\\n\\n.image__content {\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  background-image: url('https://lh3.google.com/u/0/d/1M2D3jyM95cnEho6Q7RK6PAy7-QD5PQHg=w1920-h956-iv1');\\n  background-size: contain;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n}\\n```\\n\"}"},"path":"blog/css-aspect-ratio"}